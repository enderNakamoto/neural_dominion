import { ChatOpenAI } from "@langchain/openai";
import { PromptTemplate } from "@langchain/core/prompts";
import { z } from "zod";
import type { Nation, Decision } from '../types';
import { getGame } from '../helpers';

const llm = new ChatOpenAI({
  modelName: "gpt-3.5-turbo",
  temperature: 0.9, // Higher temperature for more creative output
});

const historicalAccount = z.object({
  culture: z.string().describe("A humorous description of the nation's culture and people"),
  government: z.string().describe("A satirical take on how the government functions"),
  summary: z.string().describe("A witty historical summary of key events"),
});

const structuredLlm = llm.withStructuredOutput(historicalAccount, { name: "historical_account" });

const historyTemplate = PromptTemplate.fromTemplate(`
You are a satirical historian documenting the rise of {nation_name}, a nation with a GDP of {gdp} (considered {gdp_status}) 
under the governmental system of {ideology}.

The nation made the following pivotal decisions:
{decisions}

Their current metrics are:
Economic Freedom: {economic_freedom}/100
Civil Rights: {civil_rights}/100
Political Freedom: {political_freedom}/100

Write a humorous historical account that:
1. Describes the culture and people (mentioning GDP in creative ways)
2. Explains how their government actually works (satirizing their ideology)
3. Summarizes their history through key decisions (with witty interpretations)

Be creative, absurd, and slightly satirical while keeping true to the actual decisions and metrics.
Always include at least one ridiculous cultural tradition you've "discovered" in your research.
`);

function categorizeGDP(gdp: number): string {
  if (gdp > 5000) return "absurdly wealthy";
  if (gdp > 3000) return "comfortably rich";
  if (gdp > 1000) return "doing pretty well";
  if (gdp > 0) return "getting by";
  return "somehow still functioning";
}

function formatDecisions(decisions: Decision[]): string {
  return decisions
    .map(d => `- On the matter of ${d.issueName}, they chose: ${d.chosenOptionName}
      (${d.description})`)
    .join('\n\n');
}

export async function generateHistory(gameId: string, nationName: string): Promise<string | null> {
  const game = getGame(gameId);
  if (!game) return null;

  let nation: Nation | null = null;

  // Find the requested nation
  if (game.player1Nation?.name === nationName) nation = game.player1Nation;
  else if (game.player2Nation?.name === nationName) nation = game.player2Nation;
  else nation = game.aiNations.find(n => n.name === nationName) || null;

  if (!nation) return null;

  const prompt = await historyTemplate.format({
    nation_name: nation.name,
    gdp: nation.stats.gdp,
    gdp_status: categorizeGDP(nation.stats.gdp),
    ideology: nation.ideology.name,
    decisions: formatDecisions(nation.decisions),
    economic_freedom: nation.stats.economicFreedom,
    civil_rights: nation.stats.civilRights,
    political_freedom: nation.stats.politicalFreedom
  });

  try {
    const history = await structuredLlm.invoke(prompt);
    
    return `\n=== The Totally Accurate History of ${nation.name} ===\n
üè∞ Cultural Insights:
${history.culture}

üèõÔ∏è Government Reality Check:
${history.government}

üìú Historical Summary:
${history.summary}

[This historical account was generated by an AI historian who may or may not have had too much coffee]`;
  } catch (error) {
    console.error("Error generating history:", error);
    return null;
  }
}